#!/bin/bash
# IP Change Detector and Notifier.
# https://bitbucket.org/Zachary_DuBois/ip-updater
# (c) Copyright Zachary DuBois, 2014. All rights reserved.
version="v0.2"


##
# Variables
##

# API Information
dnsToken=""
domain=""
recordID1=""
recordName1=""
# The next two are optional
recordID2=""
recordName2=""
# Log Location (Must be absolute)
logLocation=""
# If you don't want to use Pushover, leave pushoverAppKey and/or pushoverUserKey set to "".
pushoverAppKey=""
pushoverUserKey=""
pushoverTitle="IP Updater"
pushoverURL=""
pushoverURLTitle=""
# Other (You should not need to modify these)
ip="$(curl -s http://icanhazip.com/)"
lastIP="$(tail -n 1 $logLocation | awk -F' ' '{ print $5 }')"
time="$(date '+%F %T')"


##
# Startup Checks
##

# Check if root
if [[ "$(id -u)" == "0" ]]
then
  echo "Do not run this script as root."
  exit 1
fi

# Check for curl
which curl > /dev/null
checkForCurl=$?
if [[ "$checkForCurl" != "0" ]]
then 
  echo "You need curl to run this script."
  exit 1
fi

# Check for variables set correctly
if [[ "$dnsToken" == "" ]] && [[ "$domain" == "" ]] && [[ "$recordID1" == "" ]] && [[ "$recordName1" == "" ]] && [[ "$logLocation" == "" ]]
then
  echo "You have not set all the required variables in the variables block. Please edit them with the correct details."
  exit 1
fi

# Check if locations and files exist.
if ! [[ -r "$logLocation" ]]
then
  echo "The log location does not exist. Attempting to create one."
  echo "YYYY-MM-DD HH:MM:SS - 127.0.0.1 - [X] - [X] - [X]" > $logLocation
  logCreateStatus=$?
  if [[ "$logCreateStatus" != "0" ]]
  then
    echo "Failed to make the log file. Exitting."
    exit 1
  fi
fi

if [[ "$ip" == "" ]]
then
  ip="UNAVAILABLE"
else
  ##
  # If IP Changed
  ##

  if [[ "$lastIP" != "$ip" ]]
  then
    # Notify via Pushover
    if [[ "$pushoverAppKey" != "" ]]
    then
      curl -s --form-string "token=$pushoverAppKey" --form-string "user=$pushoverUserKey" --form-string "url=$pushoverURL" --form-string "url_title=$pushoverURLTitle" --form-string "priority=-1" --form-string "title=$pushoverTitle" --form-string "message=IP has changed from $lastIP to $ip. DNS will be updated with these changes." https://api.pushover.net/1/messages.json
      curlPushover=$?
    fi

    # Update the DNS
    curl -s -X PUT "https://api.digitalocean.com/v2/domains/$domain/records/$recordID1" -d'{"name":"'$recordName1'", "data":"'$ip'"}' -H "Authorization: Bearer $dnsToken" -H "Content-Type: application/json"
    dns1=$?
    curl -s -X PUT "https://api.digitalocean.com/v2/domains/$domain/records/$recordID2" -d'{"name":"'$recordName2'", "data":"'$ip'"}' -H "Authorization: Bearer $dnsToken" -H "Content-Type: application/json"
    dns2=$?
  fi
# End of else
fi


##
# Log Everything
##

if [[ "$dns1" == "0" ]]
then
  dns1Status="[OK]"
elif [[ "$dns1" == "" ]]
then
  dns1Status="[NOT UPDATED]"
else
  dns1Status="[FAIL]"
fi

if [[ "$dns2" == "0" ]]
then
  dns2Status="[OK]"
elif [[ "$dns2" == "" ]]
then
  dns2Status="[NOT UPDATED]"
else
  dns2Status="[FAIL]"
fi

if [[ "$curlPushover" == "0" ]]
then
  curlPushoverStatus="[OK]"
elif [[ "$curlPushover" == "" ]]
then
  if [[ "$pushoverAppKey" == "" ]]
  then
    curlPushoverStatus="[DISABLED]"
  else
    curlPushoverStatus="[NOT NOTIFIED]"
  fi
else
  curlPushoverStatus="[FAIL]"
fi


##
# Log File Format
##

# Log format YYYY-MM-DD HH:MM:SS - IP: 127.0.0.1 - DNS1: [] - DNS2: [] - PUSHOVER: []
msg="$time - IP: $ip - DNS1: $dns1Status - DNS2: $dns2Status - PUSHOVER: $curlPushoverStatus"


##
# Write the log.
##

echo "$msg" >> $logLocation

exit 0
